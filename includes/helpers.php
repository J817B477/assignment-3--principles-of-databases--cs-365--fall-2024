<?php

function search($search) {
    global $key_str, $init_vector;
    try {
        // global $key_str, $init_vector;s
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8mb4",
            DBUSER,
            DBPASS
        );



        $select_query = "SELECT site_name,
                                url,
                                user_name,
                                first_name,
                                last_name,
                                email_address,
                                encrypted_password,
                                timestamp,
                                comment
                        FROM user
                        INNER JOIN registry USING (email_address)
                        INNER JOIN website USING (url)
                        WHERE site_name LIKE \"%{$search}%\"
                        OR url LIKE \"%{$search}%\"
                        OR first_name LIKE \"%{$search}%\"
                        OR last_name LIKE \"%{$search}%\"
                        OR email_address LIKE \"%{$search}%\"
                        -- OR plain_text_password LIKE \"%{$search}%\"
                        OR timestamp LIKE \"%{$search}%\"
                        OR comment LIKE \"%{$search}%\"
                        ";
        $statement  = $db -> query($select_query);
        // $statement = $db -> prepare($select_query);
        // $statement -> bindParam(':key_str', $key_str);
        // $statement -> bindParam(':init_vector', $init_vector);
        $rows =  $statement -> fetchAll();


        if (count($rows) == 0) {
            return 0;
        } else {
            echo "      <table>\n";
            echo "        <thead>\n";
            echo "          <tr>\n";
            echo "            <th>Website Name</th>\n";
            echo "            <th>Website URL</th>\n";
            echo "            <th>User Name</th>\n";
            echo "            <th>First Name</th>\n";
            echo "            <th>Last Name</th>\n";
            echo "            <th>Email Address</th>\n";
            echo "            <th>Website Password</th>\n";
            echo "            <th>Registration Date</th>\n";
            echo "            <th>Registration Comment</th>\n";
            echo "          </tr>\n";
            echo "        </thead>\n";
            echo "        <tbody>\n";

            // Populate the table with data coming from the database...
            foreach ($rows as $row) {
                // if(!empty($row['encrypted_password'])){
                //     $decrypted_value = openssl_decrypt(
                //         $row['encrypted_password'],
                //         ENCRYPTIONMODE,
                //         $key_str,
                //         OPENSSL_RAW_DATA,
                //         $init_vector
                //     );

                //     $row['encrypted_column'] = utf8_encode($decrypted_value);
                // }
                echo "          <tr>\n";
                echo "            <td>" . htmlspecialchars($row[0]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[1]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[2]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[3]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[4]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[5]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[6]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[7]) . "</td>\n";
                echo "            <td>" . htmlspecialchars($row[8] ?? '', ENT_QUOTES, 'UTF-8') . "</td>\n";
                echo "          </tr>\n";
            }
            echo "         </tbody>\n";
            echo "      </table>\n";
        }
    } catch( PDOException $e ) {
        echo '<p>The following message was generated by function <code>search</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";
        echo "<p>There are a few reasons for this. Perhaps the database doesn’t exist or wasn’t mounted. Does the volume/drive containing the database have read and write permissions?</p>\n";
        echo '<p>Click <a href="./">here</a> to go back.</p>';

        exit;
    }
}

function update($current_attribute, $new_value, $query_attribute, $pattern) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8mb4",
            DBUSER,
            DBPASS
        );

        // handles constraint integrity violations for primary/foreign key relationships
        if ($current_attribute == 'url'){
            $insert_query = "INSERT IGNORE INTO website
                            (url)
                            VALUES
                            (\"{$new_value}\")";

            $db -> query($insert_query);
        } elseif ($current_attribute == 'email_address') {
            $insert_query = "INSERT IGNORE INTO user
                            (email_address)
                            VALUES
                            (\"{$new_value}\")";
            $db -> query($insert_query);
        }

        // updates any value across all tables
        $update_query = "UPDATE registry
                        INNER JOIN user USING (email_address)
                        INNER JOIN website USING (url)
                        SET {$current_attribute}=\"{$new_value}\"
                        WHERE {$query_attribute}=\"{$pattern}\"
                        ";

        $db -> query($update_query);


    } catch( PDOException $e ) {
        echo '<p>The following message was generated by function <code>update</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

        exit;
    }
}
